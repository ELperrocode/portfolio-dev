---
interface Props {
  title: string;
  description: string;
  repoLink: string;
  images: {
    src: string;
    alt: string;
  }[];
  tags: string[];
  webLink?: string;
}

import ImageCarousel from './ImageCarousel.astro';

const { title, description, repoLink, images, tags, webLink } = Astro.props;
---

<div class="w-full p-4 bg-white/5 border border-white/20 backdrop-blur-0 rounded-lg transition-all ease-in-out duration-300 flex flex-col lg:flex-row gap-4 hover:shadow-[0_0_20px_1px_#e3dddc] hover:border-white hover:ring-black hover:ring-offset-2">
  <div class="w-full lg:w-1/3">
    <ImageCarousel images={images} />
  </div>
  <div class="flex flex-col flex-1 gap-4">
    <h3 class="text-base lg:text-2xl font-medium tracking-wider">{title}</h3>
    <p class="text-xs lg:text-base text-gray-300">{description}</p>
    
    
    <div class="flex flex-wrap gap-2">
      {tags.map((tag) => (
        <span class="px-2 py-1 text-xs font-medium bg-primary/10 text-primary rounded-full">
          {tag}
        </span>
      ))}
    </div>
    
    <div class="flex gap-4 mt-auto">
      <a 
        href={repoLink} 
        target="_blank" 
        class="flex items-center gap-2 text-sm font-medium text-primary hover:text-accent transition-colors"
      >
        <i class="ri-github-fill"></i>
        Ver en GitHub
      </a>
      {webLink && (
        <a 
          href={webLink} 
          target="_blank" 
          class="flex items-center gap-2 text-sm font-medium text-accent hover:text-primary transition-colors"
        >
          <i class="ri-external-link-line"></i>
          Ver Sitio Web
        </a>
      )}
    </div>
  </div>
</div>